# Generated by Django 5.1.6 on 2025-09-06 08:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("discussions", "0001_initial"),
        ("projects", "0001_initial"),
        ("tasks", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("task_assigned", "Task Assigned"),
                            ("task_due", "Task Due"),
                            ("task_completed", "Task Completed"),
                            ("project_invitation", "Project Invitation"),
                            ("project_update", "Project Update"),
                            ("discussion_reply", "Discussion Reply"),
                            ("mention", "Mention"),
                            ("system", "System Notification"),
                            ("announcement", "Announcement"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title_template", models.CharField(max_length=255)),
                ("message_template", models.TextField()),
                ("email_template", models.TextField(blank=True)),
                ("sms_template", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Notification Template",
                "verbose_name_plural": "Notification Templates",
                "db_table": "notification_templates",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email_task_assigned", models.BooleanField(default=True)),
                ("email_task_due", models.BooleanField(default=True)),
                ("email_project_updates", models.BooleanField(default=True)),
                ("email_discussion_replies", models.BooleanField(default=True)),
                ("email_mentions", models.BooleanField(default=True)),
                ("email_announcements", models.BooleanField(default=True)),
                ("push_task_assigned", models.BooleanField(default=True)),
                ("push_task_due", models.BooleanField(default=True)),
                ("push_project_updates", models.BooleanField(default=False)),
                ("push_discussion_replies", models.BooleanField(default=True)),
                ("push_mentions", models.BooleanField(default=True)),
                ("push_announcements", models.BooleanField(default=False)),
                ("sms_urgent_only", models.BooleanField(default=True)),
                ("sms_task_due", models.BooleanField(default=False)),
                ("sms_mentions", models.BooleanField(default=False)),
                (
                    "digest_frequency",
                    models.CharField(
                        choices=[
                            ("never", "Never"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                        ],
                        default="weekly",
                        max_length=10,
                    ),
                ),
                ("quiet_hours_start", models.TimeField(blank=True, null=True)),
                ("quiet_hours_end", models.TimeField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Preference",
                "verbose_name_plural": "Notification Preferences",
                "db_table": "notification_preferences",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("task_assigned", "Task Assigned"),
                            ("task_due", "Task Due"),
                            ("task_completed", "Task Completed"),
                            ("project_invitation", "Project Invitation"),
                            ("project_update", "Project Update"),
                            ("discussion_reply", "Discussion Reply"),
                            ("mention", "Mention"),
                            ("system", "System Notification"),
                            ("announcement", "Announcement"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("email_sent", models.BooleanField(default=False)),
                ("sms_sent", models.BooleanField(default=False)),
                ("push_sent", models.BooleanField(default=False)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("action_url", models.URLField(blank=True)),
                (
                    "discussion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="discussions.discussion",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="projects.project",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="tasks.task",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "db_table": "notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["recipient", "is_read"],
                        name="notificatio_recipie_583549_idx",
                    ),
                    models.Index(
                        fields=["notification_type"],
                        name="notificatio_notific_19df93_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="notificatio_created_e4c995_idx"
                    ),
                ],
            },
        ),
    ]
