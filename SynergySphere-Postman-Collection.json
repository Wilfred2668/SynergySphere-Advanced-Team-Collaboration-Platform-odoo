{
	"info": {
		"_postman_id": "synergysphere-api-collection",
		"name": "SynergySphere API Collection",
		"description": "Comprehensive API testing collection for SynergySphere - Advanced Team Collaboration Platform",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "apiUrl",
			"value": "{{baseUrl}}/api/v1",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('userId', response.user.id);",
									"    console.log('User registered successfully:', response.user.email);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"testpassword123\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\",\n    \"role\": \"member\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/auth/register/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"auth",
								"register",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('accessToken', response.access);",
									"    pm.environment.set('refreshToken', response.refresh);",
									"    pm.environment.set('userId', response.user.id);",
									"    console.log('Login successful, tokens saved');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"testpassword123\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/auth/login/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('accessToken', response.access);",
									"    pm.environment.set('refreshToken', response.refresh);",
									"    pm.environment.set('adminId', response.user.id);",
									"    console.log('Admin login successful, tokens saved');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@admin.com\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/auth/login/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('accessToken', response.access);",
									"    console.log('Token refreshed successfully');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/auth/refresh/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"auth",
								"refresh",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/auth/logout/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"auth",
								"logout",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/users/profile/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"users",
								"profile",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Updated Test\",\n    \"last_name\": \"User\",\n    \"profile\": {\n        \"bio\": \"Updated bio for testing\",\n        \"phone_number\": \"+1234567890\",\n        \"timezone\": \"UTC\"\n    }\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/users/profile/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"users",
								"profile",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Users (Admin Only)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/users/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('projectId', response.id);",
									"    console.log('Project created with ID:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Project\",\n    \"description\": \"This is a test project for API testing\",\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/projects/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"projects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List Projects",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/projects/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"projects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Project Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/projects/{{projectId}}/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test Project\",\n    \"description\": \"This project has been updated via API\",\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/projects/{{projectId}}/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Project Member",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{userId}}\",\n    \"role\": \"member\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/projects/{{projectId}}/members/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List Project Members",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/projects/{{projectId}}/members/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('taskId', response.id);",
									"    console.log('Task created with ID:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Task\",\n    \"description\": \"This is a test task for API testing\",\n    \"project\": {{projectId}},\n    \"priority\": \"medium\",\n    \"status\": \"todo\",\n    \"due_date\": \"2025-12-31T23:59:59Z\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/tasks/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tasks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/tasks/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tasks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/tasks/{{taskId}}/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Test Task\",\n    \"description\": \"This task has been updated via API\",\n    \"priority\": \"high\",\n    \"status\": \"in_progress\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/tasks/{{taskId}}/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assigned_to\": {{userId}}\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/tasks/{{taskId}}/assign/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"assign",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Tasks by Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/tasks/?project={{projectId}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tasks",
								""
							],
							"query": [
								{
									"key": "project",
									"value": "{{projectId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Tasks by Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/tasks/?status=todo",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tasks",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "todo"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Discussions",
			"item": [
				{
					"name": "Create Discussion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('discussionId', response.id);",
									"    console.log('Discussion created with ID:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Discussion\",\n    \"content\": \"This is a test discussion for API testing\",\n    \"project\": {{projectId}}\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/discussions/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"discussions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List Discussions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/discussions/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"discussions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Discussion Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/discussions/{{discussionId}}/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"discussions",
								"{{discussionId}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Comment to Discussion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('commentId', response.id);",
									"    console.log('Comment created with ID:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"This is a test comment on the discussion\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/discussions/{{discussionId}}/comments/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"discussions",
								"{{discussionId}}",
								"comments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List Discussion Comments",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/discussions/{{discussionId}}/comments/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"discussions",
								"{{discussionId}}",
								"comments",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "List User Notifications",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/notifications/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"notifications",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark Notification as Read",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"is_read\": true\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/notifications/1/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"notifications",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark All Notifications as Read",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/notifications/mark-all-read/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"notifications",
								"mark-all-read",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Health & Documentation",
			"item": [
				{
					"name": "API Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "API Schema (OpenAPI)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/schema/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"schema",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-refresh token if expired",
					"const accessToken = pm.environment.get('accessToken');",
					"const refreshToken = pm.environment.get('refreshToken');",
					"",
					"if (refreshToken && !accessToken) {",
					"    console.log('Access token missing, attempting refresh...');",
					"    // This would need to be implemented as a separate request",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script for common assertions",
					"pm.test('Response time is less than 2000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});",
					"",
					"if (pm.response.code !== 200 && pm.response.code !== 201 && pm.response.code !== 204) {",
					"    console.log('Response Body:', pm.response.text());",
					"}"
				]
			}
		}
	]
}
